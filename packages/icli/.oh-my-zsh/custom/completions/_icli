#compdef icli

autoload -U is-at-least

_icli() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_icli_commands" \
"*::: :->icli" \
&& ret=0
    case $state in
    (icli)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-command-$line[1]:"
        case $line[1] in
            (config)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_icli__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-config-command-$line[1]:"
        case $line[1] in
            (generate)
_arguments "${_arguments_options[@]}" : \
'--force[Force overwrite even if the configuration file already exists]' \
'--local[Generate configuration file in the current directory]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
'--exists[Only list the existing configuration files]' \
'--with-content[Print configuration files content]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" : \
'--json[JSON output]' \
'--yaml[YAML output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_icli__config__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-config-help-command-$line[1]:"
        case $line[1] in
            (generate)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(ip)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_icli__ip_commands" \
"*::: :->ip" \
&& ret=0

    case $state in
    (ip)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-ip-command-$line[1]:"
        case $line[1] in
            (ps1)
_arguments "${_arguments_options[@]}" : \
'--no-name[Don'\''t show the network interface name]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_icli__ip__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-ip-help-command-$line[1]:"
        case $line[1] in
            (ps1)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(makefile)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_icli__makefile_commands" \
"*::: :->makefile" \
&& ret=0

    case $state in
    (makefile)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-makefile-command-$line[1]:"
        case $line[1] in
            (genhelp)
_arguments "${_arguments_options[@]}" : \
'--shell-dir=[Where the help target shell is placed, relative to the current directory]:SHELL_DIR: ' \
'--description=[Help target description]:DESCRIPTION: ' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_icli__makefile__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-makefile-help-command-$line[1]:"
        case $line[1] in
            (genhelp)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(shinc)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_icli__shinc_commands" \
"*::: :->shinc" \
&& ret=0

    case $state in
    (shinc)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-shinc-command-$line[1]:"
        case $line[1] in
            (build)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(man)
_arguments "${_arguments_options[@]}" : \
'--output-dir=[Write man pages to DIR]:DIR:_files' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_icli__shinc__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-shinc-help-command-$line[1]:"
        case $line[1] in
            (build)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(man)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(vpn)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_icli__vpn_commands" \
"*::: :->vpn" \
&& ret=0

    case $state in
    (vpn)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-vpn-command-$line[1]:"
        case $line[1] in
            (makeconfig)
_arguments "${_arguments_options[@]}" : \
'--app=[VPN client app]:APP:((clashx\:"ClashX"
clash.verge\:"Clash.Verge"
quantumultx\:"QuantumultX"))' \
'-t+[Path to the template file for generating config files]:TEMPLATE: ' \
'--template=[Path to the template file for generating config files]:TEMPLATE: ' \
'--output-dir=[Write QuantumultX.conf to DIR]:DIR: ' \
'--download-rules[Download clash provider rules to local]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_icli__vpn__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-vpn-help-command-$line[1]:"
        case $line[1] in
            (makeconfig)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(completion)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':path -- Use slash to separate multi-level subcommands:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_icli__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-help-command-$line[1]:"
        case $line[1] in
            (config)
_arguments "${_arguments_options[@]}" : \
":: :_icli__help__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-help-config-command-$line[1]:"
        case $line[1] in
            (generate)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(ip)
_arguments "${_arguments_options[@]}" : \
":: :_icli__help__ip_commands" \
"*::: :->ip" \
&& ret=0

    case $state in
    (ip)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-help-ip-command-$line[1]:"
        case $line[1] in
            (ps1)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(makefile)
_arguments "${_arguments_options[@]}" : \
":: :_icli__help__makefile_commands" \
"*::: :->makefile" \
&& ret=0

    case $state in
    (makefile)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-help-makefile-command-$line[1]:"
        case $line[1] in
            (genhelp)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(shinc)
_arguments "${_arguments_options[@]}" : \
":: :_icli__help__shinc_commands" \
"*::: :->shinc" \
&& ret=0

    case $state in
    (shinc)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-help-shinc-command-$line[1]:"
        case $line[1] in
            (build)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(man)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(vpn)
_arguments "${_arguments_options[@]}" : \
":: :_icli__help__vpn_commands" \
"*::: :->vpn" \
&& ret=0

    case $state in
    (vpn)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:icli-help-vpn-command-$line[1]:"
        case $line[1] in
            (makeconfig)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_icli_commands] )) ||
_icli_commands() {
    local commands; commands=(
'config:Manage local and global configuration' \
'ip:Ip utilities' \
'makefile:Makefile utilities' \
'shinc:Bash cli project manager using \`argc\`' \
'vpn:VPN utilities' \
'completion:Generate tab-completion scripts for terminal shell' \
'new:Crate a new command and generate the layout files' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli commands' commands "$@"
}
(( $+functions[_icli__completion_commands] )) ||
_icli__completion_commands() {
    local commands; commands=()
    _describe -t commands 'icli completion commands' commands "$@"
}
(( $+functions[_icli__config_commands] )) ||
_icli__config_commands() {
    local commands; commands=(
'generate:Generate the configuration files' \
'list:List the configuration files' \
'show:Show the active configuration' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli config commands' commands "$@"
}
(( $+functions[_icli__config__generate_commands] )) ||
_icli__config__generate_commands() {
    local commands; commands=()
    _describe -t commands 'icli config generate commands' commands "$@"
}
(( $+functions[_icli__config__help_commands] )) ||
_icli__config__help_commands() {
    local commands; commands=(
'generate:Generate the configuration files' \
'list:List the configuration files' \
'show:Show the active configuration' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli config help commands' commands "$@"
}
(( $+functions[_icli__config__help__generate_commands] )) ||
_icli__config__help__generate_commands() {
    local commands; commands=()
    _describe -t commands 'icli config help generate commands' commands "$@"
}
(( $+functions[_icli__config__help__help_commands] )) ||
_icli__config__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'icli config help help commands' commands "$@"
}
(( $+functions[_icli__config__help__list_commands] )) ||
_icli__config__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'icli config help list commands' commands "$@"
}
(( $+functions[_icli__config__help__show_commands] )) ||
_icli__config__help__show_commands() {
    local commands; commands=()
    _describe -t commands 'icli config help show commands' commands "$@"
}
(( $+functions[_icli__config__list_commands] )) ||
_icli__config__list_commands() {
    local commands; commands=()
    _describe -t commands 'icli config list commands' commands "$@"
}
(( $+functions[_icli__config__show_commands] )) ||
_icli__config__show_commands() {
    local commands; commands=()
    _describe -t commands 'icli config show commands' commands "$@"
}
(( $+functions[_icli__help_commands] )) ||
_icli__help_commands() {
    local commands; commands=(
'config:Manage local and global configuration' \
'ip:Ip utilities' \
'makefile:Makefile utilities' \
'shinc:Bash cli project manager using \`argc\`' \
'vpn:VPN utilities' \
'completion:Generate tab-completion scripts for terminal shell' \
'new:Crate a new command and generate the layout files' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli help commands' commands "$@"
}
(( $+functions[_icli__help__completion_commands] )) ||
_icli__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'icli help completion commands' commands "$@"
}
(( $+functions[_icli__help__config_commands] )) ||
_icli__help__config_commands() {
    local commands; commands=(
'generate:Generate the configuration files' \
'list:List the configuration files' \
'show:Show the active configuration' \
    )
    _describe -t commands 'icli help config commands' commands "$@"
}
(( $+functions[_icli__help__config__generate_commands] )) ||
_icli__help__config__generate_commands() {
    local commands; commands=()
    _describe -t commands 'icli help config generate commands' commands "$@"
}
(( $+functions[_icli__help__config__list_commands] )) ||
_icli__help__config__list_commands() {
    local commands; commands=()
    _describe -t commands 'icli help config list commands' commands "$@"
}
(( $+functions[_icli__help__config__show_commands] )) ||
_icli__help__config__show_commands() {
    local commands; commands=()
    _describe -t commands 'icli help config show commands' commands "$@"
}
(( $+functions[_icli__help__help_commands] )) ||
_icli__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'icli help help commands' commands "$@"
}
(( $+functions[_icli__help__ip_commands] )) ||
_icli__help__ip_commands() {
    local commands; commands=(
'ps1:Print network interface and ip part of the terminal shell'\''s \`\$PS1\`' \
    )
    _describe -t commands 'icli help ip commands' commands "$@"
}
(( $+functions[_icli__help__ip__ps1_commands] )) ||
_icli__help__ip__ps1_commands() {
    local commands; commands=()
    _describe -t commands 'icli help ip ps1 commands' commands "$@"
}
(( $+functions[_icli__help__makefile_commands] )) ||
_icli__help__makefile_commands() {
    local commands; commands=(
'genhelp:Generate the help target for Makefile' \
    )
    _describe -t commands 'icli help makefile commands' commands "$@"
}
(( $+functions[_icli__help__makefile__genhelp_commands] )) ||
_icli__help__makefile__genhelp_commands() {
    local commands; commands=()
    _describe -t commands 'icli help makefile genhelp commands' commands "$@"
}
(( $+functions[_icli__help__new_commands] )) ||
_icli__help__new_commands() {
    local commands; commands=()
    _describe -t commands 'icli help new commands' commands "$@"
}
(( $+functions[_icli__help__shinc_commands] )) ||
_icli__help__shinc_commands() {
    local commands; commands=(
'build:Generate and build project shell script' \
'completion:Generate an auto-completion script for the project' \
'man:Generate man-pages for the project' \
    )
    _describe -t commands 'icli help shinc commands' commands "$@"
}
(( $+functions[_icli__help__shinc__build_commands] )) ||
_icli__help__shinc__build_commands() {
    local commands; commands=()
    _describe -t commands 'icli help shinc build commands' commands "$@"
}
(( $+functions[_icli__help__shinc__completion_commands] )) ||
_icli__help__shinc__completion_commands() {
    local commands; commands=()
    _describe -t commands 'icli help shinc completion commands' commands "$@"
}
(( $+functions[_icli__help__shinc__man_commands] )) ||
_icli__help__shinc__man_commands() {
    local commands; commands=()
    _describe -t commands 'icli help shinc man commands' commands "$@"
}
(( $+functions[_icli__help__vpn_commands] )) ||
_icli__help__vpn_commands() {
    local commands; commands=(
'makeconfig:Make config for VPN app' \
    )
    _describe -t commands 'icli help vpn commands' commands "$@"
}
(( $+functions[_icli__help__vpn__makeconfig_commands] )) ||
_icli__help__vpn__makeconfig_commands() {
    local commands; commands=()
    _describe -t commands 'icli help vpn makeconfig commands' commands "$@"
}
(( $+functions[_icli__ip_commands] )) ||
_icli__ip_commands() {
    local commands; commands=(
'ps1:Print network interface and ip part of the terminal shell'\''s \`\$PS1\`' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli ip commands' commands "$@"
}
(( $+functions[_icli__ip__help_commands] )) ||
_icli__ip__help_commands() {
    local commands; commands=(
'ps1:Print network interface and ip part of the terminal shell'\''s \`\$PS1\`' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli ip help commands' commands "$@"
}
(( $+functions[_icli__ip__help__help_commands] )) ||
_icli__ip__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'icli ip help help commands' commands "$@"
}
(( $+functions[_icli__ip__help__ps1_commands] )) ||
_icli__ip__help__ps1_commands() {
    local commands; commands=()
    _describe -t commands 'icli ip help ps1 commands' commands "$@"
}
(( $+functions[_icli__ip__ps1_commands] )) ||
_icli__ip__ps1_commands() {
    local commands; commands=()
    _describe -t commands 'icli ip ps1 commands' commands "$@"
}
(( $+functions[_icli__makefile_commands] )) ||
_icli__makefile_commands() {
    local commands; commands=(
'genhelp:Generate the help target for Makefile' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli makefile commands' commands "$@"
}
(( $+functions[_icli__makefile__genhelp_commands] )) ||
_icli__makefile__genhelp_commands() {
    local commands; commands=()
    _describe -t commands 'icli makefile genhelp commands' commands "$@"
}
(( $+functions[_icli__makefile__help_commands] )) ||
_icli__makefile__help_commands() {
    local commands; commands=(
'genhelp:Generate the help target for Makefile' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli makefile help commands' commands "$@"
}
(( $+functions[_icli__makefile__help__genhelp_commands] )) ||
_icli__makefile__help__genhelp_commands() {
    local commands; commands=()
    _describe -t commands 'icli makefile help genhelp commands' commands "$@"
}
(( $+functions[_icli__makefile__help__help_commands] )) ||
_icli__makefile__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'icli makefile help help commands' commands "$@"
}
(( $+functions[_icli__new_commands] )) ||
_icli__new_commands() {
    local commands; commands=()
    _describe -t commands 'icli new commands' commands "$@"
}
(( $+functions[_icli__shinc_commands] )) ||
_icli__shinc_commands() {
    local commands; commands=(
'build:Generate and build project shell script' \
'completion:Generate an auto-completion script for the project' \
'man:Generate man-pages for the project' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli shinc commands' commands "$@"
}
(( $+functions[_icli__shinc__build_commands] )) ||
_icli__shinc__build_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc build commands' commands "$@"
}
(( $+functions[_icli__shinc__completion_commands] )) ||
_icli__shinc__completion_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc completion commands' commands "$@"
}
(( $+functions[_icli__shinc__help_commands] )) ||
_icli__shinc__help_commands() {
    local commands; commands=(
'build:Generate and build project shell script' \
'completion:Generate an auto-completion script for the project' \
'man:Generate man-pages for the project' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli shinc help commands' commands "$@"
}
(( $+functions[_icli__shinc__help__build_commands] )) ||
_icli__shinc__help__build_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc help build commands' commands "$@"
}
(( $+functions[_icli__shinc__help__completion_commands] )) ||
_icli__shinc__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc help completion commands' commands "$@"
}
(( $+functions[_icli__shinc__help__help_commands] )) ||
_icli__shinc__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc help help commands' commands "$@"
}
(( $+functions[_icli__shinc__help__man_commands] )) ||
_icli__shinc__help__man_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc help man commands' commands "$@"
}
(( $+functions[_icli__shinc__man_commands] )) ||
_icli__shinc__man_commands() {
    local commands; commands=()
    _describe -t commands 'icli shinc man commands' commands "$@"
}
(( $+functions[_icli__vpn_commands] )) ||
_icli__vpn_commands() {
    local commands; commands=(
'makeconfig:Make config for VPN app' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli vpn commands' commands "$@"
}
(( $+functions[_icli__vpn__help_commands] )) ||
_icli__vpn__help_commands() {
    local commands; commands=(
'makeconfig:Make config for VPN app' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'icli vpn help commands' commands "$@"
}
(( $+functions[_icli__vpn__help__help_commands] )) ||
_icli__vpn__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'icli vpn help help commands' commands "$@"
}
(( $+functions[_icli__vpn__help__makeconfig_commands] )) ||
_icli__vpn__help__makeconfig_commands() {
    local commands; commands=()
    _describe -t commands 'icli vpn help makeconfig commands' commands "$@"
}
(( $+functions[_icli__vpn__makeconfig_commands] )) ||
_icli__vpn__makeconfig_commands() {
    local commands; commands=()
    _describe -t commands 'icli vpn makeconfig commands' commands "$@"
}

if [ "$funcstack[1]" = "_icli" ]; then
    _icli "$@"
else
    compdef _icli icli
fi
